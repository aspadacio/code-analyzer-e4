
package com.safeval.codeanalyzer.ws.analysis;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AnalysisServiceSoap", targetNamespace = "http://ws.isasecdev.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AnalysisServiceSoap {


    /**
     * 
     * @param fvers
     * @param vers
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetAnalysisList", action = "http://ws.isasecdev.com/GetAnalysisList")
    @WebResult(name = "GetAnalysisListResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "GetAnalysisList", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetAnalysisList")
    @ResponseWrapper(localName = "GetAnalysisListResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetAnalysisListResponse")
    public String getAnalysisList(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers,
        @WebParam(name = "fvers", targetNamespace = "http://ws.isasecdev.com/")
        long fvers);

    /**
     * 
     * @param anlId
     * @param fvers
     * @param vers
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetAnalysis", action = "http://ws.isasecdev.com/GetAnalysis")
    @WebResult(name = "GetAnalysisResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "GetAnalysis", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetAnalysis")
    @ResponseWrapper(localName = "GetAnalysisResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetAnalysisResponse")
    public String getAnalysis(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "anlId", targetNamespace = "http://ws.isasecdev.com/")
        String anlId,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers,
        @WebParam(name = "fvers", targetNamespace = "http://ws.isasecdev.com/")
        long fvers);

    /**
     * 
     * @param vers
     * @param tag
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UploadAnalysis", action = "http://ws.isasecdev.com/UploadAnalysis")
    @WebResult(name = "UploadAnalysisResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "UploadAnalysis", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.UploadAnalysis")
    @ResponseWrapper(localName = "UploadAnalysisResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.UploadAnalysisResponse")
    public String uploadAnalysis(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "tag", targetNamespace = "http://ws.isasecdev.com/")
        String tag,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers);

    /**
     * 
     * @param vers
     * @param name
     * @param active
     * @param robver
     * @param orgId
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "RegisterRobot", action = "http://ws.isasecdev.com/RegisterRobot")
    @WebResult(name = "RegisterRobotResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "RegisterRobot", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.RegisterRobot")
    @ResponseWrapper(localName = "RegisterRobotResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.RegisterRobotResponse")
    public String registerRobot(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "orgId", targetNamespace = "http://ws.isasecdev.com/")
        String orgId,
        @WebParam(name = "name", targetNamespace = "http://ws.isasecdev.com/")
        String name,
        @WebParam(name = "active", targetNamespace = "http://ws.isasecdev.com/")
        int active,
        @WebParam(name = "robver", targetNamespace = "http://ws.isasecdev.com/")
        String robver,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers);

    /**
     * 
     * @param vers
     * @param orgId
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "HasRegisteredRobots", action = "http://ws.isasecdev.com/HasRegisteredRobots")
    @WebResult(name = "HasRegisteredRobotsResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "HasRegisteredRobots", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.HasRegisteredRobots")
    @ResponseWrapper(localName = "HasRegisteredRobotsResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.HasRegisteredRobotsResponse")
    public String hasRegisteredRobots(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "orgId", targetNamespace = "http://ws.isasecdev.com/")
        String orgId,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers);

    /**
     * 
     * @param fvers
     * @param vers
     * @param id
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "QueryTaskForRobot", action = "http://ws.isasecdev.com/QueryTaskForRobot")
    @WebResult(name = "QueryTaskForRobotResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "QueryTaskForRobot", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.QueryTaskForRobot")
    @ResponseWrapper(localName = "QueryTaskForRobotResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.QueryTaskForRobotResponse")
    public String queryTaskForRobot(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "id", targetNamespace = "http://ws.isasecdev.com/")
        String id,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers,
        @WebParam(name = "fvers", targetNamespace = "http://ws.isasecdev.com/")
        long fvers);

    /**
     * 
     * @param fvers
     * @param vers
     * @param token
     * @param tskId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetRobotTask", action = "http://ws.isasecdev.com/GetRobotTask")
    @WebResult(name = "GetRobotTaskResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "GetRobotTask", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetRobotTask")
    @ResponseWrapper(localName = "GetRobotTaskResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetRobotTaskResponse")
    public String getRobotTask(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "tskId", targetNamespace = "http://ws.isasecdev.com/")
        String tskId,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers,
        @WebParam(name = "fvers", targetNamespace = "http://ws.isasecdev.com/")
        long fvers);

    /**
     * 
     * @param sts
     * @param vers
     * @param percdone
     * @param token
     * @param tskId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UpdateRobotTaskStatus", action = "http://ws.isasecdev.com/UpdateRobotTaskStatus")
    @WebResult(name = "UpdateRobotTaskStatusResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "UpdateRobotTaskStatus", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.UpdateRobotTaskStatus")
    @ResponseWrapper(localName = "UpdateRobotTaskStatusResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.UpdateRobotTaskStatusResponse")
    public String updateRobotTaskStatus(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "tskId", targetNamespace = "http://ws.isasecdev.com/")
        String tskId,
        @WebParam(name = "sts", targetNamespace = "http://ws.isasecdev.com/")
        int sts,
        @WebParam(name = "percdone", targetNamespace = "http://ws.isasecdev.com/")
        double percdone,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers);

    /**
     * 
     * @param vers
     * @param tag
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UploadRobotTaskResult", action = "http://ws.isasecdev.com/UploadRobotTaskResult")
    @WebResult(name = "UploadRobotTaskResultResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "UploadRobotTaskResult", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.UploadRobotTaskResult")
    @ResponseWrapper(localName = "UploadRobotTaskResultResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.UploadRobotTaskResultResponse")
    public String uploadRobotTaskResult(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "tag", targetNamespace = "http://ws.isasecdev.com/")
        String tag,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers);

    /**
     * 
     * @param vers
     * @param tag
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UploadRobotRequest", action = "http://ws.isasecdev.com/UploadRobotRequest")
    @WebResult(name = "UploadRobotRequestResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "UploadRobotRequest", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.UploadRobotRequest")
    @ResponseWrapper(localName = "UploadRobotRequestResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.UploadRobotRequestResponse")
    public String uploadRobotRequest(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "tag", targetNamespace = "http://ws.isasecdev.com/")
        String tag,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers);

    /**
     * 
     * @param fvers
     * @param vers
     * @param id
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CheckRobotRequest", action = "http://ws.isasecdev.com/CheckRobotRequest")
    @WebResult(name = "CheckRobotRequestResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "CheckRobotRequest", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.CheckRobotRequest")
    @ResponseWrapper(localName = "CheckRobotRequestResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.CheckRobotRequestResponse")
    public String checkRobotRequest(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "id", targetNamespace = "http://ws.isasecdev.com/")
        String id,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers,
        @WebParam(name = "fvers", targetNamespace = "http://ws.isasecdev.com/")
        long fvers);

    /**
     * 
     * @param fvers
     * @param rrrId
     * @param vers
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetRobotRequest", action = "http://ws.isasecdev.com/GetRobotRequest")
    @WebResult(name = "GetRobotRequestResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "GetRobotRequest", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetRobotRequest")
    @ResponseWrapper(localName = "GetRobotRequestResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetRobotRequestResponse")
    public String getRobotRequest(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "rrrId", targetNamespace = "http://ws.isasecdev.com/")
        String rrrId,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers,
        @WebParam(name = "fvers", targetNamespace = "http://ws.isasecdev.com/")
        long fvers);

    /**
     * 
     * @param fvers
     * @param rrrId
     * @param vers
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CancelRobotRequest", action = "http://ws.isasecdev.com/CancelRobotRequest")
    @WebResult(name = "CancelRobotRequestResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "CancelRobotRequest", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.CancelRobotRequest")
    @ResponseWrapper(localName = "CancelRobotRequestResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.CancelRobotRequestResponse")
    public String cancelRobotRequest(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "rrrId", targetNamespace = "http://ws.isasecdev.com/")
        String rrrId,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers,
        @WebParam(name = "fvers", targetNamespace = "http://ws.isasecdev.com/")
        long fvers);

    /**
     * 
     * @param fvers
     * @param vers
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetFullMessages", action = "http://ws.isasecdev.com/GetFullMessages")
    @WebResult(name = "GetFullMessagesResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "GetFullMessages", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetFullMessages")
    @ResponseWrapper(localName = "GetFullMessagesResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetFullMessagesResponse")
    public String getFullMessages(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers,
        @WebParam(name = "fvers", targetNamespace = "http://ws.isasecdev.com/")
        long fvers);

    /**
     * 
     * @param fvers
     * @param vers
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetAnalysisUpdate", action = "http://ws.isasecdev.com/GetAnalysisUpdate")
    @WebResult(name = "GetAnalysisUpdateResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "GetAnalysisUpdate", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetAnalysisUpdate")
    @ResponseWrapper(localName = "GetAnalysisUpdateResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetAnalysisUpdateResponse")
    public String getAnalysisUpdate(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers,
        @WebParam(name = "fvers", targetNamespace = "http://ws.isasecdev.com/")
        long fvers);

    /**
     * 
     * @param schId
     * @param fvers
     * @param vers
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "StartScheduledJob", action = "http://ws.isasecdev.com/StartScheduledJob")
    @WebResult(name = "StartScheduledJobResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "StartScheduledJob", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.StartScheduledJob")
    @ResponseWrapper(localName = "StartScheduledJobResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.StartScheduledJobResponse")
    public String startScheduledJob(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "schId", targetNamespace = "http://ws.isasecdev.com/")
        String schId,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers,
        @WebParam(name = "fvers", targetNamespace = "http://ws.isasecdev.com/")
        long fvers);

    /**
     * 
     * @param codeLanguageId
     * @param repoLogin
     * @param minAssr
     * @param fvers
     * @param numberOfLines
     * @param ignoreLib
     * @param module
     * @param origin
     * @param vers
     * @param minSevr
     * @param repository
     * @param fileMask
     * @param token
     * @param minProb
     * @param repoLabel
     * @param system
     * @param organization
     * @param name
     * @param diferentialAnalysis
     * @param keepVuln
     * @param repoPass
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreateCodeInspectionJob", action = "http://ws.isasecdev.com/CreateCodeInspectionJob")
    @WebResult(name = "CreateCodeInspectionJobResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "CreateCodeInspectionJob", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.CreateCodeInspectionJob")
    @ResponseWrapper(localName = "CreateCodeInspectionJobResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.CreateCodeInspectionJobResponse")
    public String createCodeInspectionJob(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "organization", targetNamespace = "http://ws.isasecdev.com/")
        String organization,
        @WebParam(name = "name", targetNamespace = "http://ws.isasecdev.com/")
        String name,
        @WebParam(name = "system", targetNamespace = "http://ws.isasecdev.com/")
        String system,
        @WebParam(name = "module", targetNamespace = "http://ws.isasecdev.com/")
        String module,
        @WebParam(name = "origin", targetNamespace = "http://ws.isasecdev.com/")
        int origin,
        @WebParam(name = "repository", targetNamespace = "http://ws.isasecdev.com/")
        String repository,
        @WebParam(name = "repoLogin", targetNamespace = "http://ws.isasecdev.com/")
        String repoLogin,
        @WebParam(name = "repoPass", targetNamespace = "http://ws.isasecdev.com/")
        String repoPass,
        @WebParam(name = "repoLabel", targetNamespace = "http://ws.isasecdev.com/")
        String repoLabel,
        @WebParam(name = "codeLanguageId", targetNamespace = "http://ws.isasecdev.com/")
        String codeLanguageId,
        @WebParam(name = "numberOfLines", targetNamespace = "http://ws.isasecdev.com/")
        int numberOfLines,
        @WebParam(name = "fileMask", targetNamespace = "http://ws.isasecdev.com/")
        String fileMask,
        @WebParam(name = "minAssr", targetNamespace = "http://ws.isasecdev.com/")
        int minAssr,
        @WebParam(name = "minSevr", targetNamespace = "http://ws.isasecdev.com/")
        int minSevr,
        @WebParam(name = "minProb", targetNamespace = "http://ws.isasecdev.com/")
        int minProb,
        @WebParam(name = "ignoreLib", targetNamespace = "http://ws.isasecdev.com/")
        int ignoreLib,
        @WebParam(name = "diferentialAnalysis", targetNamespace = "http://ws.isasecdev.com/")
        int diferentialAnalysis,
        @WebParam(name = "keepVuln", targetNamespace = "http://ws.isasecdev.com/")
        int keepVuln,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers,
        @WebParam(name = "fvers", targetNamespace = "http://ws.isasecdev.com/")
        long fvers);

    /**
     * 
     * @param codeLanguageId
     * @param minAssr
     * @param fvers
     * @param numberOfLines
     * @param ignoreLib
     * @param module
     * @param vers
     * @param format
     * @param minSevr
     * @param fileMask
     * @param token
     * @param minProb
     * @param system
     * @param filename
     * @param organization
     * @param name
     * @param diferentialAnalysis
     * @param keepVuln
     * @param tag
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "StartDirectCodeInspectionJob", action = "http://ws.isasecdev.com/StartDirectCodeInspectionJob")
    @WebResult(name = "StartDirectCodeInspectionJobResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "StartDirectCodeInspectionJob", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.StartDirectCodeInspectionJob")
    @ResponseWrapper(localName = "StartDirectCodeInspectionJobResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.StartDirectCodeInspectionJobResponse")
    public String startDirectCodeInspectionJob(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "organization", targetNamespace = "http://ws.isasecdev.com/")
        String organization,
        @WebParam(name = "name", targetNamespace = "http://ws.isasecdev.com/")
        String name,
        @WebParam(name = "system", targetNamespace = "http://ws.isasecdev.com/")
        String system,
        @WebParam(name = "module", targetNamespace = "http://ws.isasecdev.com/")
        String module,
        @WebParam(name = "tag", targetNamespace = "http://ws.isasecdev.com/")
        String tag,
        @WebParam(name = "format", targetNamespace = "http://ws.isasecdev.com/")
        int format,
        @WebParam(name = "filename", targetNamespace = "http://ws.isasecdev.com/")
        String filename,
        @WebParam(name = "codeLanguageId", targetNamespace = "http://ws.isasecdev.com/")
        String codeLanguageId,
        @WebParam(name = "numberOfLines", targetNamespace = "http://ws.isasecdev.com/")
        int numberOfLines,
        @WebParam(name = "fileMask", targetNamespace = "http://ws.isasecdev.com/")
        String fileMask,
        @WebParam(name = "minAssr", targetNamespace = "http://ws.isasecdev.com/")
        int minAssr,
        @WebParam(name = "minSevr", targetNamespace = "http://ws.isasecdev.com/")
        int minSevr,
        @WebParam(name = "minProb", targetNamespace = "http://ws.isasecdev.com/")
        int minProb,
        @WebParam(name = "ignoreLib", targetNamespace = "http://ws.isasecdev.com/")
        int ignoreLib,
        @WebParam(name = "diferentialAnalysis", targetNamespace = "http://ws.isasecdev.com/")
        int diferentialAnalysis,
        @WebParam(name = "keepVuln", targetNamespace = "http://ws.isasecdev.com/")
        int keepVuln,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers,
        @WebParam(name = "fvers", targetNamespace = "http://ws.isasecdev.com/")
        long fvers);

    /**
     * 
     * @param maxLevel
     * @param sendData
     * @param minAssr
     * @param fvers
     * @param keepTentative
     * @param maxTest
     * @param module
     * @param vers
     * @param minSevr
     * @param copyCrawlId
     * @param url
     * @param token
     * @param minProb
     * @param system
     * @param penetrationTestId
     * @param organization
     * @param scope
     * @param name
     * @param maxPage
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreatePenetrationTestJob", action = "http://ws.isasecdev.com/CreatePenetrationTestJob")
    @WebResult(name = "CreatePenetrationTestJobResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "CreatePenetrationTestJob", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.CreatePenetrationTestJob")
    @ResponseWrapper(localName = "CreatePenetrationTestJobResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.CreatePenetrationTestJobResponse")
    public String createPenetrationTestJob(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "organization", targetNamespace = "http://ws.isasecdev.com/")
        String organization,
        @WebParam(name = "name", targetNamespace = "http://ws.isasecdev.com/")
        String name,
        @WebParam(name = "system", targetNamespace = "http://ws.isasecdev.com/")
        String system,
        @WebParam(name = "module", targetNamespace = "http://ws.isasecdev.com/")
        String module,
        @WebParam(name = "penetrationTestId", targetNamespace = "http://ws.isasecdev.com/")
        String penetrationTestId,
        @WebParam(name = "url", targetNamespace = "http://ws.isasecdev.com/")
        String url,
        @WebParam(name = "scope", targetNamespace = "http://ws.isasecdev.com/")
        int scope,
        @WebParam(name = "maxPage", targetNamespace = "http://ws.isasecdev.com/")
        int maxPage,
        @WebParam(name = "maxLevel", targetNamespace = "http://ws.isasecdev.com/")
        int maxLevel,
        @WebParam(name = "maxTest", targetNamespace = "http://ws.isasecdev.com/")
        int maxTest,
        @WebParam(name = "copyCrawlId", targetNamespace = "http://ws.isasecdev.com/")
        String copyCrawlId,
        @WebParam(name = "keepTentative", targetNamespace = "http://ws.isasecdev.com/")
        int keepTentative,
        @WebParam(name = "sendData", targetNamespace = "http://ws.isasecdev.com/")
        int sendData,
        @WebParam(name = "minAssr", targetNamespace = "http://ws.isasecdev.com/")
        int minAssr,
        @WebParam(name = "minSevr", targetNamespace = "http://ws.isasecdev.com/")
        int minSevr,
        @WebParam(name = "minProb", targetNamespace = "http://ws.isasecdev.com/")
        int minProb,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers,
        @WebParam(name = "fvers", targetNamespace = "http://ws.isasecdev.com/")
        long fvers);

    /**
     * 
     * @param jobId
     * @param fvers
     * @param vers
     * @param lang
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetJobStatus", action = "http://ws.isasecdev.com/GetJobStatus")
    @WebResult(name = "GetJobStatusResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "GetJobStatus", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetJobStatus")
    @ResponseWrapper(localName = "GetJobStatusResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetJobStatusResponse")
    public String getJobStatus(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "jobId", targetNamespace = "http://ws.isasecdev.com/")
        String jobId,
        @WebParam(name = "lang", targetNamespace = "http://ws.isasecdev.com/")
        int lang,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers,
        @WebParam(name = "fvers", targetNamespace = "http://ws.isasecdev.com/")
        long fvers);

    /**
     * 
     * @param jobId
     * @param fvers
     * @param vers
     * @param lang
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetJobResult", action = "http://ws.isasecdev.com/GetJobResult")
    @WebResult(name = "GetJobResultResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "GetJobResult", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetJobResult")
    @ResponseWrapper(localName = "GetJobResultResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetJobResultResponse")
    public String getJobResult(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "jobId", targetNamespace = "http://ws.isasecdev.com/")
        String jobId,
        @WebParam(name = "lang", targetNamespace = "http://ws.isasecdev.com/")
        int lang,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers,
        @WebParam(name = "fvers", targetNamespace = "http://ws.isasecdev.com/")
        long fvers);

    /**
     * 
     * @param jobId
     * @param fvers
     * @param vers
     * @param lang
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetJobData", action = "http://ws.isasecdev.com/GetJobData")
    @WebResult(name = "GetJobDataResult", targetNamespace = "http://ws.isasecdev.com/")
    @RequestWrapper(localName = "GetJobData", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetJobData")
    @ResponseWrapper(localName = "GetJobDataResponse", targetNamespace = "http://ws.isasecdev.com/", className = "com.isasecdev.ws.GetJobDataResponse")
    public String getJobData(
        @WebParam(name = "token", targetNamespace = "http://ws.isasecdev.com/")
        String token,
        @WebParam(name = "jobId", targetNamespace = "http://ws.isasecdev.com/")
        String jobId,
        @WebParam(name = "lang", targetNamespace = "http://ws.isasecdev.com/")
        int lang,
        @WebParam(name = "vers", targetNamespace = "http://ws.isasecdev.com/")
        String vers,
        @WebParam(name = "fvers", targetNamespace = "http://ws.isasecdev.com/")
        long fvers);

}
